/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.nner;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Csekme
 */
public class SearchWindow extends javax.swing.JDialog {

    private Point anchorPoint;
   public boolean paused = false;
   public  boolean first;
   public  Thread szal;

    /**
     * Creates new form SearchWindow
     */
    public SearchWindow(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setCenter();
        setMoveAble();
    }

    void setCenter() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(((dim.width - this.getSize().width) / 2), ((dim.height - this.getSize().height) / 2));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SEARCH_TEXT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BTN = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        UNRELEASED_CHECK = new javax.swing.JCheckBox();

        setTitle("Keresés");
        setUndecorated(true);
        setOpacity(0.9F);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        SEARCH_TEXT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        SEARCH_TEXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SEARCH_TEXTKeyTyped(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Keresés:");

        BTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/nner/IMG/play.png"))); // NOI18N
        BTN.setText("Következő");
        BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/nner/IMG/close.png"))); // NOI18N
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/nner/IMG/find48.png"))); // NOI18N

        UNRELEASED_CHECK.setBackground(new java.awt.Color(204, 204, 204));
        UNRELEASED_CHECK.setForeground(new java.awt.Color(102, 102, 102));
        UNRELEASED_CHECK.setText("Unreleased gyártás");
        UNRELEASED_CHECK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UNRELEASED_CHECKMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(UNRELEASED_CHECK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BTN))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SEARCH_TEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(0, 30, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addComponent(SEARCH_TEXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTN)
                    .addComponent(UNRELEASED_CHECK))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Runnable SEARCH = new Runnable() {

        @Override
        public void run() {
            
            boolean talalat = false;
            
            
            for (int i = 0; i < PlNner.PLANS.size(); i++) {
                for (int ii = 0; ii < PlNner.PLANS.get(i).STATIONS.size(); ii++) {
                    for (int iii = 0; iii < PlNner.PLANS.get(i).STATIONS.get(ii).PRODUCTS.size(); iii++) {
                        for (int iiii = 0; iiii < PlNner.PLANS.get(i).STATIONS.get(ii).PRODUCTS.size(); iiii++) {
                            if (PlNner.PLANS.get(i).STATIONS.get(ii).PRODUCTS.get(iiii).getNo() == iii) {
                                if ((PlNner.PLANS.get(i).STATIONS.get(ii).PRODUCTS.get(iiii).RELEASE) || (UNRELEASED_CHECK.isSelected())) {
                                    while (paused) {
                                        try {
                                            Thread.sleep(10);
                                        } catch (InterruptedException ex) {
                                            Logger.getLogger(SearchWindow.class.getName()).log(Level.SEVERE, null, ex);
                                        }
                                    }
                                    if (isThis(PlNner.PLANS.get(i).STATIONS.get(ii).PRODUCTS.get(iiii))) {
                                        talalat = true;
                                        paused = true;
                                        MainForm.TOP.setSelectedIndex(i);
                                        PlNner.PLANS.get(i).STATIONS.get(ii).SEARCHER.setText(PlNner.PLANS.get(i).STATIONS.get(ii).PRODUCTS.get(iiii).getID());
                                        final JScrollPane pane = (JScrollPane) PlNner.PLANS.get(i).STATIONS.get(ii).getParent().getParent().getParent();
                                        final Product prod = PlNner.PLANS.get(i).STATIONS.get(ii).PRODUCTS.get(iiii);
                                        final Station station = PlNner.PLANS.get(i).STATIONS.get(ii);
                                        station.clearSelection();
                                        prod.selectThis();
                                        SwingUtilities.invokeLater(new Runnable() {

                                            @Override
                                            public void run() {
                                                pane.getVerticalScrollBar().setValue(prod.getLocation().y - station.TOP_PANEL.getHeight() - 80);

                                            }
                                        });
                                    }
                                }

                            }
                        }
                    }
                }

            }
            
            if (!talalat){
                JOptionPane.showMessageDialog(SearchWindow.this, "Nem volt találat!", "Figyelem!", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(this.getClass().getResource("IMG/sad48.png")));
            }
            

        }
    };

    @Override
    public void setVisible(boolean value) {
        SEARCH_TEXT.setText("");
        super.setVisible(value);
    }


    private void BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNActionPerformed

        if (first) {

            szal = new Thread(SEARCH);
            szal.start();

            first = false;
        }

        paused = false;


    }//GEN-LAST:event_BTNActionPerformed

    private void SEARCH_TEXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SEARCH_TEXTKeyTyped
        first = true;
    }//GEN-LAST:event_SEARCH_TEXTKeyTyped

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        setVisible(false);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void UNRELEASED_CHECKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UNRELEASED_CHECKMouseClicked
        first = true;
    }//GEN-LAST:event_UNRELEASED_CHECKMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchWindow dialog = new SearchWindow(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private boolean isThis(Product prod) {

        if (SEARCH_TEXT.getText().length() == 0) {
            return false;
        }

        if (prod.getCustomer().toLowerCase().contains(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }

        if (prod.getPOutSideCustomer().toLowerCase().contains(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }

        if (prod.getProjectName().toLowerCase().contains(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }
        if (prod.getJobInfo().toLowerCase().contains(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }

        if (prod.getID().toLowerCase().contains(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }

        if (prod.getJobnumber().toLowerCase().contains(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }
        if (prod.getPartnumber().toLowerCase().contains(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }
        if (PlNner.SEQUENCES[prod.getSequence()].toLowerCase().equals(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }
        if (prod.getComment().toLowerCase().contains(SEARCH_TEXT.getText().toLowerCase())) {
            return true;
        }

        return false;
    }

    private void setMoveAble() {
        /**
         * This handle is a reference to THIS because in next Mouse Adapter
         * "this" is not allowed
         */
        @SuppressWarnings("unused")
        final SearchWindow handle = SearchWindow.this;
        handle.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                anchorPoint = e.getPoint();
            }

            @Override
            public void mouseDragged(MouseEvent me) {
                me.translatePoint(me.getComponent().getLocation().x, me.getComponent().getLocation().y);

                handle.setLocation(me.getX() - anchorPoint.x, me.getY() - anchorPoint.y);

            }

        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton BTN;
    public javax.swing.JTextField SEARCH_TEXT;
    private javax.swing.JCheckBox UNRELEASED_CHECK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
